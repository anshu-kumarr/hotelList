{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/hotelProject.ts/hotel_project/src/components/Maps.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { data } from '../MarkerData';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  height: \"100vh\",\n  width: \"100%\"\n};\nconst defaultCenter = {\n  lat: -37.788450,\n  lng: 144.962680\n};\n\nfunction Maps(props) {\n  _s();\n\n  const state = useSelector(state => state.showMap);\n  return /*#__PURE__*/_jsxDEV(MapDisplay, {\n    toggle: state,\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapStyles,\n        zoom: 2,\n        center: defaultCenter,\n        children: data.hotels.map(item => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: +item.lat,\n              lng: +item.lng\n            }\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Maps, \"dFAAPDNEsxQMpRpiSMZXJjfPktw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Maps;\nexport default Maps;\nconst MapDisplay = styled.div`\nwidth:${props => props.toggle ? '50%' : '0'}`;\n_c2 = MapDisplay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Maps\");\n$RefreshReg$(_c2, \"MapDisplay\");","map":{"version":3,"sources":["/Users/admin/Desktop/hotelProject.ts/hotel_project/src/components/Maps.tsx"],"names":["React","GoogleMap","LoadScript","Marker","data","styled","useSelector","mapStyles","height","width","defaultCenter","lat","lng","Maps","props","state","showMap","hotels","map","item","id","MapDisplay","div","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAA+BC,MAA/B,QAA4C,wBAA5C;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAyBC,WAAzB,QAA4C,aAA5C;;AAIA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,OADQ;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,CAAC,SADc;AACHC,EAAAA,GAAG,EAAE;AADF,CAAtB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAA0C;AAAA;;AACxC,QAAMC,KAAK,GAAGT,WAAW,CAAES,KAAD,IAA2BA,KAAK,CAACC,OAAlC,CAAzB;AACA,sBACE,QAAC,UAAD;AAAY,IAAA,MAAM,EAAED,KAApB;AAAA,2BACG,QAAC,UAAD;AACA,MAAA,gBAAgB,EAAC,EADjB;AAAA,6BAEC,QAAC,SAAD;AACE,QAAA,iBAAiB,EAAER,SADrB;AAEE,QAAA,IAAI,EAAE,CAFR;AAGE,QAAA,MAAM,EAAEG,aAHV;AAAA,kBAKGN,IAAI,CAACa,MAAL,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzB,8BACE,QAAE,MAAF;AAAuB,YAAA,QAAQ,EAAE;AAAER,cAAAA,GAAG,EAAE,CAACQ,IAAI,CAACR,GAAb;AAAkBC,cAAAA,GAAG,EAAE,CAACO,IAAI,CAACP;AAA7B;AAAjC,aAAcO,IAAI,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJA;AALH;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GArBQP,I;UACOP,W;;;KADPO,I;AAuBT,eAAeA,IAAf;AAEA,MAAMQ,UAAU,GAAGhB,MAAM,CAACiB,GAA0B;AACpD,QAAUR,KAAD,IAAWA,KAAK,CAACS,MAAN,GAAe,KAAf,GAAsB,GAAM,EADhD;MAAMF,U","sourcesContent":["import React, { ReactElement } from 'react'\nimport { GoogleMap, LoadScript,Marker} from '@react-google-maps/api';\nimport { data } from '../MarkerData'\nimport styled from 'styled-components';\nimport { RootStateOrAny, useSelector } from 'react-redux';\ninterface Props {\n  \n}\nconst mapStyles = {        \n  height: \"100vh\",\n  width: \"100%\"};\n\nconst defaultCenter = {\n  lat: -37.788450, lng: 144.962680\n}\nfunction Maps(props: Props): ReactElement {\n  const state = useSelector((state: RootStateOrAny) => state.showMap)\n  return (\n    <MapDisplay toggle={state} >\n       <LoadScript\n       googleMapsApiKey=''>\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={2}\n          center={defaultCenter}\n        >\n          {data.hotels.map((item) => {\n            return (\n              < Marker key={item.id} position={{ lat: +item.lat, lng: +item.lng }}/>\n            )\n          })}\n        </GoogleMap>\n     </LoadScript>\n    </MapDisplay>\n   \n  )\n}\n\nexport default Maps\n\nconst MapDisplay = styled.div<{ toggle: Boolean }> `\nwidth:${((props) => props.toggle ? '50%' :'0' )}`"]},"metadata":{},"sourceType":"module"}